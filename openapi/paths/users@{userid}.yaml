get:
  tags:
    - User
  summary: Get user by discord userid
  description: |
    Get the data of the user by the discord userid.
  operationId: getUserByName
  parameters:
    - name: userid
      in: path
      description: The id that needs to be fetched
      required: true
      schema:
        type: string
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            Bearer:
              type: string
              description: Your api key
              example: K9AJkdD8Kyarrf3SJHZQYufQAHvfKFHVyfqZV8cLttg88YpkWMjE8CVrggir
              minLength: 60
              maxLength: 60
  responses:
    '200':
      description: Success
      content:
        application/json:
          schema:
            $ref: ../components/schemas/Ticket.yaml
    '403':
      description: Forbidden
    '404':
      description: User not found
post:
  tags:
    - User
  summary: Create new entry
#  description: This can only be done by the logged in user.
  operationId: updateUser
  parameters:
    - name: userid
      in: path
      description: The id under which the data will be created
      required: true
      schema:
        type: string
  responses:
    '201':
      description: OK
    '400':
      description: Invalid user data supplied
    '409':
      description: User already exists.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            Bearer:
              type: string
              description: Your api key
              example: K9AJkdD8Kyarrf3SJHZQYufQAHvfKFHVyfqZV8cLttg88YpkWMjE8CVrggir
              minLength: 60
              maxLength: 60
            values:
              allOf:
                - $ref: ../components/schemas/Ticket.yaml
#          $ref: ../components/schemas/Ticket.yaml
    description: Update user object
    required: true

delete:
  tags:
    - User
  summary: Delete user by discord userid
  description: |
    Delete the user from the database.
  operationId: deleteUserById
  parameters:
    - name: userid
      in: path
      description: The id that needs to be fetched
      required: true
      schema:
        type: string
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            Bearer:
              type: string
              description: Your api key
              example: K9AJkdD8Kyarrf3SJHZQYufQAHvfKFHVyfqZV8cLttg88YpkWMjE8CVrggir
              minLength: 60
              maxLength: 60
  responses:
    '200':
      description: Success
    '403':
      description: Forbidden
    '404':
      description: User not found